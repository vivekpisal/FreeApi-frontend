{"version":3,"sources":["Components/logo.svg","Components/Menu.js","Components/BottomBar.js","Components/Apicall.js","Components/Home.js","Components/Guide.js","Components/Page404.js","App.js","index.js"],"names":["Menu","Navbar","style","fontSize","bg","variant","expand","Brand","to","src","logo","width","height","className","Toggle","aria-controls","Collapse","id","Nav","Link","as","NavLink","BottomBar","Jumbotron","backgroundColor","Container","codeblock","color","Apicall","useState","url","setUrl","request","setRequest","apidata","setApiData","mode","setMode","response","setResponse","useEffect","getData","a","fetch","then","resp","json","data","param","method","body","headers","catch","error","textareastyle","display","Form","Control","placeholder","type","value","onChange","d","target","required","onClick","name","text","e","rows","Button","Alert","JSON","stringify","Home","fetchdata","setFetchData","GetInfo","axios","get","info","Row","Col","xs","paddingLeft","fontFamily","href","spaceup","marginTop","Guide","Page404","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7117036a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.414febcc.svg\";","import Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport {NavLink} from 'react-router-dom'\nimport logo from './logo.svg'\n\nexport default function Menu()\n{\n\treturn(\n\t\t<>\n\t\t  <Navbar style={{fontSize:\"40\"}} bg=\"dark\" variant=\"dark\" expand=\"lg\">\n\t\t    <Navbar.Brand to=\"/home\">\n\t\t    <img\n\t\t        src={logo}\n\t\t        width=\"50\"\n\t\t        height=\"45\"\n\t\t        className=\"d-inline-block align-top\"\n\t\t      />\n\t\t    </Navbar.Brand>\n\t\t    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  \t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t    <Nav className=\"mr-auto\">\n\t\t      <Nav.Link as={NavLink} to=\"/FreeApi-frontend/\">Home</Nav.Link>\n\t\t      <Nav.Link as={NavLink} to=\"/guide\">Guide</Nav.Link>\n\t\t    </Nav>\n\t\t   \t</Navbar.Collapse>\n\t\t  </Navbar>\n\t\t  \n\t\t</>\n\t)\n}\n","import Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default function BottomBar() {\n    return (\n        <>\n            <Jumbotron style={{ backgroundColor: \"#c2dcff\" }}>\n                <Container>\n                    <h1> Free API </h1>\n                    <p> Coded and maintained with❤️ by Vivek Pisal© 2021 </p>\n                </Container>\n            </Jumbotron>\n        </>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\n\nconst codeblock = {\n    backgroundColor: \"#404040\",\n    color: \"white\",\n    height: 500,\n};\n\n\nconst Apicall = () => {\n    const [url, setUrl] = useState(\"\");\n    const [request, setRequest] = useState(\"\");\n    const [apidata, setApiData] = useState('');\n    const [mode, setMode] = useState(\"none\");\n    const [response, setResponse] = useState(\"{}\");\n\n    useEffect(() => {\n\n    }, [response])\n\n\n    const getData = async () => {\n\n        // GET\n        if (request === \"get\") {\n            const d = await fetch(url)\n                .then(resp => resp.json())\n                .then(data => setResponse(data));\n        }\n\n        // POST\n        else if (request === \"post\") {\n            const param = {\n                method: 'post',\n                body: apidata,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n            await fetch(url, param)\n                .then(resp => resp.json())\n                .then(data => setResponse(data))\n                .catch(error => setResponse(error));\n        }\n\n        // DELETE\n        else if (request === \"delete\") {\n            const param = {\n                method: 'delete'\n            }\n            await fetch(url, param)\n                .then(resp => resp.json())\n                .then(data => setResponse(data))\n                .catch(error => setResponse(error));\n        }\n\n        // PUT\n        else if (request === \"put\") {\n            const param = {\n                method: 'put',\n                body: apidata,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            }\n            await fetch(url, param)\n                .then(resp => resp.json())\n                .then(data => setResponse(data))\n                .catch(error => setResponse(error));\n        }\n    }\n\n    let textareastyle = {\n        display: mode\n    }\n\n\n\n    return (\n        <>\n            <Form>\n                URL: <Form.Control className=\"text-muted\" placeholder=\"Url\" type=\"url\" value={url} onChange={d => setUrl(d.target.value)} required></Form.Control>\n\n                <br />\n                Request:  <label><input type=\"radio\" onClick={() => { setMode(\"none\"); setRequest(\"get\"); setApiData(\"\"); }} name=\"request\" text=\"GET\" />GET </label>\n                <label><input type=\"radio\" onClick={() => { setMode(\"block\"); setRequest(\"post\"); }} name=\"request\" value=\"POST\" />POST </label>\n                <label><input type=\"radio\" onClick={() => { setMode(\"block\"); setRequest(\"put\"); }} name=\"request\" value=\"UPDATE\" />UPDATE </label>\n                <label><input type=\"radio\" onClick={() => { setMode(\"none\"); setRequest(\"delete\"); setApiData(\"\"); }} name=\"request\" value=\"DELETE\" />DELETE </label>\n                <br></br>\n                <Form.Control as=\"textarea\" onChange={e => setApiData(e.target.value)} rows={5} placeholder=\"JSON data\" style={textareastyle}></Form.Control>\n                <br />\n                <Button variant=\"outline-primary\" onClick={getData}>Send</Button>\n                <br />\n                {response === \"{}\" ? \"\" : <div>Response : <Alert variant=\"dark\" style={codeblock}>\n                    <pre style={codeblock}>\n\n                        {JSON.stringify(response, null, 2)}\n                    </pre>\n                </Alert></div>}\n            </Form>\n        </>\n    );\n};\n\nexport default Apicall;\n\n\n","import { useState } from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport axios from \"axios\";\nimport BottomBar from \"./BottomBar\";\nimport Apicall from \"./Apicall\";\n\nconst codeblock = {\n    backgroundColor: \"#404040\",\n    color: \"white\",\n};\n\nexport default function Home() {\n    const [fetchdata, setFetchData] = useState(\"{}\");\n\n    const GetInfo = async () => {\n        const info = await axios.get(\"http://localhost:8000/todos/1\");\n        setFetchData(info.data);\n    };\n\n    return (\n        <>\n            <Jumbotron style={{ backgroundColor: \"#c2dcff\" }}>\n                <h1>\n\n                    {\"{\"}\n                    JSON {\"}\"}\n                    API\n                </h1>\n                <p> Free fake API for testing and prototyping. </p>\n                <p>\n                    <Button variant=\"primary\"> Learn more </Button>\n                </p>\n            </Jumbotron>\n            <Container>\n                <Row>\n                    <Col> </Col>\n                    <Col xs={8}>\n                        <Apicall />\n\n                        <h1>Examples</h1>\n                        <Alert variant=\"dark\" style={codeblock}>\n                            <span style={{ color: \"orange\" }}> fetch </span>\n                            ('http://localhost:8000/todos/1') <br />\n                            <span style={{ paddingLeft: \"30px\" }}> </span>.\n                            <span style={{ color: \"orange\" }}> then </span>(response =>\n                            response. <span style={{ color: \"orange\" }}> json </span>())\n                            <br />\n                            <span style={{ paddingLeft: \"30px\" }}> </span>.\n                            <span style={{ color: \"orange\" }}> then </span>(json => console.\n                            <span style={{ color: \"orange\" }}> log </span>(json))\n                        </Alert>\n                        <br />\n                        <Button variant=\"outline-primary\" onClick={GetInfo}>\n                            Fetch\n                        </Button>\n                        <br />\n                        <br />\n                        <Alert variant=\"dark\" style={codeblock}>\n                            <pre style={codeblock}>\n\n                                {JSON.stringify(fetchdata, null, 2)}\n                            </pre>\n                        </Alert>\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        <h1 style={{ fontFamily: \"Baloo Tammudu 2\" }}>\n\n                            When to use\n                        </h1>\n                        <p>\n                            JSONPlaceholder is a free online REST API that you can use\n                            <b> whenever you need some fake data. </b>\n                        </p>\n                        <br />\n                        <br />\n                        <h1 style={{ fontFamily: \"Baloo Tammudu 2\" }}> Resources </h1>\n                        <a href=\"/posts\"> /posts</a>\n                        <span style={{ paddingLeft: \"40px\" }}> </span> 10 Posts <br />\n                        <a href=\"/todos\"> /todos</a>\n                        <span style={{ paddingLeft: \"40px\" }}> </span> 10 Todos <br />\n                        <a href=\"/comments\"> /comments</a>\n                        <span style={{ paddingLeft: \"10px\" }}> </span> 10 comments <br />\n                        <br />\n                        <br />\n                        <h1> Routes </h1>\n                        <p>\n                            All HTTP methods are supported.You can use http or https for your\n                            requests.\n                        </p>\n                        GET <span style={{ paddingLeft: \"50px\" }}> </span>\n                        <a href=\"/posts\"> /posts</a>\n                        <br />\n                        GET <span style={{ paddingLeft: \"50px\" }}> </span>\n                        <a href=\"/posts/1\"> /posts/ 1 </a> <br />\n                        GET <span style={{ paddingLeft: \"50px\" }}> </span>\n                        <a href=\"/posts/1/comments\"> /posts/ 1 / comments </a> <br />\n                        GET <span style={{ paddingLeft: \"50px\" }}> </span>\n                        <a href=\"/todos\"> /todos</a>\n                        <br />\n                        GET <span style={{ paddingLeft: \"50px\" }}> </span>\n                        <a href=\"/todos/1\"> /todos/ 1 </a> <br />\n                        POST <span style={{ paddingLeft: \"40px\" }}> </span>/posts <br />\n                        PUT <span style={{ paddingLeft: \"50px\" }}> </span>/posts / 1 <br />\n                        DELETE <span style={{ paddingLeft: \"20px\" }}> </span>/posts / 1\n                        <br />\n                        POST <span style={{ paddingLeft: \"40px\" }}> </span>/todos <br />\n                        PUT <span style={{ paddingLeft: \"50px\" }}> </span>/todos / 1 <br />\n                        DELETE <span style={{ paddingLeft: \"20px\" }}> </span>/todos / 1\n                        <br />\n                    </Col>\n                    <Col> </Col>\n                </Row>\n            </Container>\n            <br />\n            <br />\n            <BottomBar />\n        </>\n    );\n}\n","import Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Alert from \"react-bootstrap/Alert\";\nimport BottomBar from \"./BottomBar\";\n\nconst codeblock = {\n    backgroundColor: \"#404040\",\n    color: \"white\",\n};\n\nconst spaceup = {\n    marginTop: \"70px\",\n};\n\nexport default function Guide() {\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col> </Col>\n                    <Col xs={8}>\n                        <h1> Guide Page </h1>\n                        <p style={{ color: \"black\" }}>\n                            Below you 'll find examples using Fetch API but you can FreeAPI\n                            with any other language.\n                        </p>\n                        <p style={{ color: \"black\" }}>\n                            You can copy paste the code in your browser console to quickly\n                            test FreeAPI.\n                        </p>\n                        <h2 style={spaceup}> Getting a resource </h2>\n                        <Alert variant=\"dark\" style={codeblock}>\n                            <span style={{ color: \"orange\" }}> fetch </span>\n                            ('http://localhost:8000/todos/1') <br />\n                            <span style={{ paddingLeft: \"30px\" }}> </span>.\n                            <span style={{ color: \"orange\" }}> then </span>(response =>\n                            response. <span style={{ color: \"orange\" }}> json </span>())\n                            <br />\n                            <span style={{ paddingLeft: \"30px\" }}> </span>.\n                            <span style={{ color: \"orange\" }}> then </span>(json => console.\n                            <span style={{ color: \"orange\" }}> log </span>(json))\n                        </Alert>\n                        <p> 👇Output: - </p>\n                        <Alert variant=\"dark\" style={codeblock}>\n\n                            {\"{\"} <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>id: 1, <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>title: '...', <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>body: '...', <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>userId: 1<br />\n                            {\"}\"}\n                        </Alert>\n                        <h2 style={spaceup}> Listing all resources </h2>\n                        <Alert variant=\"dark\" style={codeblock}>\n                            <span style={{ color: \"orange\" }}> fetch </span>\n                            ('http://localhost:8000/todos/1') <br />\n                            <span style={{ paddingLeft: \"30px\" }}> </span>.\n                            <span style={{ color: \"orange\" }}> then </span>(response =>\n                            response. <span style={{ color: \"orange\" }}> json </span>())\n                            <br />\n                            <span style={{ paddingLeft: \"30px\" }}> </span>.\n                            <span style={{ color: \"orange\" }}> then </span>(json => console.\n                            <span style={{ color: \"orange\" }}> log </span>(json))\n                        </Alert>\n                        <p> 👇Output: - </p>\n                        <Alert variant=\"dark\" style={codeblock}>\n\n                            [ <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span> {\"{\"}\n                            id: 1, title: '...' /* ... */ {\"}\"}, <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span> {\"{\"}\n                            id: 2, title: '...' /* ... */ {\"}\"}, <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span> {\"{\"}\n                            id: 3, title: '...' /* ... */ {\"}\"}, <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>/ * ...*/ <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span> {\"{\"}\n                            id: 100, title: '...' /* ... */ {\"}\"}, <br />\n                            ]; <br />\n                        </Alert>\n                        <b> Important </b>: resource will not be really updated on the\n                        server but it will be faked as if .\n                        <h2 style={spaceup}> Creating a resource </h2>\n                        <Alert variant=\"dark\" style={codeblock}>\n                            <span style={{ color: \"orange\" }}> fetch </span>\n                            ('https://jsonplaceholder.typicode.com/posts', {\"{\"} <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>method: 'POST',\n                            <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>body: JSON.\n                            <span style={{ color: \"orange\" }}> stringify </span>({\"{\"} <br />\n                            <span style={{ paddingLeft: \"25px\" }}> </span>title: 'foo', <br />\n                            <span style={{ paddingLeft: \"25px\" }}> </span>body: 'bar', <br />\n                            <span style={{ paddingLeft: \"25px\" }}> </span>userId: 1, <br />\n                            {\"}\"}), <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>headers: {\"{\"}\n                            <br />\n                            <span style={{ paddingLeft: \"25px\" }}> </span>'Content-type':\n                            'application/json; charset=UTF-8', <br /> {\"}\"}, <br /> {\"}\"})\n                            <br /> . <span style={{ color: \"orange\" }}> then </span>\n              ((response) => response.\n                            <span style={{ color: \"orange\" }}> json </span>()) <br /> .\n                            <span style={{ color: \"orange\" }}> then </span>((json) =>\n                            console.log(json)); <br />\n                        </Alert>\n                        <p> 👇Output: - </p>\n                        <Alert variant=\"dark\" style={codeblock}>\n\n                            {\"{\"} <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>id: 101, <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>title: 'foo', <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>body: 'bar', <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>userId: 1<br />\n                            {\"}\"}\n                        </Alert>\n                        <b> Important </b>:resource will not be really updated on the server\n                        but it will be faked as if .\n                        <h2 style={spaceup}> Deleting a resource </h2>\n                        <Alert variant=\"dark\" style={codeblock}>\n                            <span style={{ color: \"orange\" }}> fetch </span>\n                            ('https://jsonplaceholder.typicode.com/posts/1', {\"{\"} <br />\n                            <span style={{ paddingLeft: \"15px\" }}> </span>method: 'DELETE',\n                            <br /> {\"}\"});\n                        </Alert>\n                        <b> Important </b>: resource will not be really updated on the\n                        server but it will be faked as if .\n                    </Col>\n                    <Col> </Col>\n                </Row>\n            </Container>\n            <BottomBar />\n        </>\n    );\n}\n","export default function Page404()\n{\n\treturn(\n\t<>\n\t\t<h1>404 Page Not Found</h1>\n\t</>\t\n\t);\n}","import Menu from './Components/Menu';\nimport {Switch,Route} from 'react-router-dom';\nimport Home from './Components/Home'\nimport Guide from './Components/Guide'\nimport Page404 from './Components/Page404'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n    <>\n      <Menu/>\n      <Switch>\n          <Route exact path=\"/FreeApi-frontend/\" component={Home} />\n          <Route exact path=\"/guide\" component={Guide} />\n          <Route path=\"\" component={Page404} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}